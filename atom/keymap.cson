# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts. Unlike style sheets however,
# each selector can only be declared once.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/using-atom-basic-customization#customizing-key-bindings
# * https://atom.io/docs/latest/behind-atom-keymaps-in-depth
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# https://atom.io/docs/latest/using-atom-basic-customization#cson

'atom-text-editor':
  'alt-j': 'core:move-down'
  'alt-k': 'core:move-up'
  'alt-h': 'core:move-left'
  'alt-l': 'core:move-right'

  'alt-shift-J':'change-case:camel'
  'alt-shift-K':'change-case:constant'
  'alt-shift-H':'change-case:pascal'
  'alt-shift-L':'change-case:snake'
  'ctrl-h': 'tree-view:toggle-focus'
  'ctrl-l': 'tree-view:toggle-focus'
  'ctrl-n': 'tree-view:add-file'

  'ctrl-=': 'editor:auto-indent'

'body':
  'ctrl-tab': 'pane:show-next-item'
  'ctrl-tab ^ctrl': 'unset!'
  'ctrl-shift-tab': 'pane:show-previous-item'
  'ctrl-shift-tab ^ctrl': 'unset!'
